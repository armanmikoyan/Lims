name: E Lab BE Non Prod

on: workflow_dispatch

jobs:
    install-and-validate:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '20' # Specify the Node.js version you want to use
      
            - name: Install dependencies
              run: npm install
      
            - name: Run lint
              run: npm run lint
      
            # - name: Run tests
            #   run: npm run test
      
            - name: Run build
              run: npm run build
                
    deploy:
      runs-on: ubuntu-latest
      needs: install-and-validate
      env: 
        POSTGRES_USER: ${{ secrets.POSTGRES_USER_DEV }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_DEV }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST_DEV }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT_DEV }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB_DEV }}
        DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
        JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
        JWT_ACCESS_TOKEN_EXPIRATION: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}
        JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
        JWT_REFRESH_TOKEN_EXPIRATION: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}
        JWT_RESET_SECRET: ${{ secrets.JWT_RESET_SECRET }}
        JWT_RESET_TOKEN_EXPIRATION: ${{ secrets.JWT_RESET_TOKEN_EXPIRATION }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
        EMAIL_RESET_PASSWORD_URL: ${{ secrets.EMAIL_RESET_PASSWORD_URL }}

      steps:
        - name: Install OpenVPN
          run: |
            sudo apt update
            sudo apt install -y openvpn openvpn-systemd-resolved

        - name: Checkout code
          uses: actions/checkout@v4
          with:
            path: elab-be-dev

        - name: Create .env file
          working-directory: elab-be-dev
          run: |
            echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
            echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
            echo "POSTGRES_HOST=${POSTGRES_HOST}" >> .env
            echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
            echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
            echo "DATABASE_URL=${DATABASE_URL}" >> .env
            echo "JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}" >> .env
            echo "JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION}" >> .env
            echo "JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}" >> .env
            echo "JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}" >> .env
            echo "JWT_RESET_SECRET=${JWT_RESET_SECRET}" >> .env
            echo "JWT_RESET_TOKEN_EXPIRATION=${JWT_RESET_TOKEN_EXPIRATION}" >> .env
            echo "EMAIL_USER=${EMAIL_USER}" >> .env
            echo "EMAIL_PASS=${EMAIL_PASS}" >> .env
            echo "EMAIL_RESET_PASSWORD_URL=${EMAIL_RESET_PASSWORD_URL}" >> .env

        - name: Connect to VPN
          uses: "kota65535/github-openvpn-connect-action@v2"
          with:
            config_file: ./elab-be-dev/.github/workflows/client.ovpn
        
        - name: Stop service
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ vars.VM_IP }}
            username: ${{ secrets.SSH_USER }}
            cipher: ecdh-sha2-nistp521
            key: ${{secrets.SSH_KEY}}
            script: |
              cd ~/elab-be-dev
              sudo docker compose stop
              cd ..
              rm -r ~/elab-be-dev

        - name: Copy code to VM
          env:
            SSH_KEY: ${{secrets.SSH_KEY}}
            SSH_USER: ${{secrets.SSH_USER}}
            VM_IP: ${{vars.VM_IP}}
          run: |
            echo "${SSH_KEY}" >> /tmp/ssh_key
            chmod 400 /tmp/ssh_key
            scp -o KexAlgorithms=ecdh-sha2-nistp521 -o 'StrictHostKeyChecking no' -i /tmp/ssh_key -r ./elab-be-dev ${SSH_USER}@$VM_IP:~
            
        - name: Run latest version
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ vars.VM_IP }}
            username: ${{ secrets.SSH_USER }}
            cipher: ecdh-sha2-nistp521
            key: ${{secrets.SSH_KEY}}
            script: |
              cd ~/elab-be-dev
              sudo docker compose -f docker-compose.non-prod.yml up -d --build
              rm -rf ./.git